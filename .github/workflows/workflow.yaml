name: Database Migrations

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - staging
      - main # Or your prod branch
  workflow_dispatch: # Allow manual triggering

jobs:
  migrate:
    strategy:
      matrix:
        environment: [dev, staging, prod]
        include:
          - environment: dev
            branch: dev
            db_host: localhost
            db_name: your_dev_db
            db_user: your_dev_db_user
            db_pass: your_dev_db_pass
            needs_approval: false
          - environment: staging
            branch: staging
            db_host: your_staging_db_host
            db_name: your_staging_db
            db_user: your_staging_db_user
            db_pass: your_staging_db_pass
            needs_approval: true
          - environment: prod
            branch: main
            db_host: your_prod_db_host
            db_name: your_prod_db
            db_user: your_prod_db_user
            db_pass: your_prod_db_pass
            needs_approval: true

    name: Migrate ${{ matrix.environment }}
    runs-on: ubuntu-latest
    if: ${{ !matrix.needs_approval || (matrix.needs_approval && needs.approval.outputs.approved == 'true') }} # Corrected if condition
    needs:
      - approval # Ensure the approval job runs if needed

    steps:
      - uses: actions/checkout@v3
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: pdo, mysql
      - name: Install Composer dependencies
        run: composer install --no-interaction --no-dev --prefer-dist
      - name: Set up environment variables
        run: |
          echo "DB_HOST=${{ matrix.db_host }}" >> .env
          echo "DB_DATABASE=${{ matrix.db_name }}" >> .env
          echo "DB_USERNAME=${{ matrix.db_user }}" >> .env
          echo "DB_PASSWORD=${{ matrix.db_pass }}" >> .env
      - name: Run migrations with gh-ost and default migrations
        run: |
          php artisan config:clear
          MIGRATIONS=$(git diff --name-only ${{ github.event.before }} HEAD -- database/migrations/*.php)
          if [[ -n "$MIGRATIONS" ]]; then
            for migration in $MIGRATIONS; do
                GHOST_COMMAND=$(grep -oP 'gh-ost:.*' $migration)
                if [[ -n "$GHOST_COMMAND" ]]; then
                    echo "Running gh-ost migration: $GHOST_COMMAND"
                    eval "$GHOST_COMMAND"
                else
                    echo "Running default migration: $(basename $migration)"
                    php artisan migrate --path="$migration" --force
                fi
            done
          else
              echo "No new migration found."
          fi
      - name: Generate new key if it's new deployment for dev env
        if: ${{ matrix.environment == 'dev' }}
        run: php artisan key:generate

  approval: # Manual approval job
    if: ${{ github.event_name == 'pull_request' && (github.base_ref == 'staging' || github.base_ref == 'main') }} # Only run for PRs to staging or main
    runs-on: ubuntu-latest
    outputs:
      approved: ${{ contains(github.event.review.state, 'approved') }}
    steps:
      - name: Check for approvals
        if: ${{ github.event.review.state == 'approved' }}
        run: echo "PR approved!"